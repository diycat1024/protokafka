// Code generated by protoc-gen-go. DO NOT EDIT.
// source: GCTOLS.proto

/*
Package __GCToLs is a generated protocol buffer package.

It is generated from these files:
	GCTOLS.proto

It has these top-level messages:
	AskLogin
	SendMsg
	NetMsg
	ReadMsg
	LoginResult
*/
package __GCToLs

import proto "github.com/agilab/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Cmd int32

const (
	Cmd_eMsgToLSFromGC_Unknow Cmd = 0
	// 登录相关
	Cmd_eMsgToLSFromGC_AskLogin Cmd = 1
	// 消息相关
	Cmd_eMsgToLSFromGC_SendMsg Cmd = 160
	Cmd_eMsgToLSFromGC_ReadMsg Cmd = 161
	// 消息通知相关
	Cmd_eMsgToGCFromLS_NetMsg Cmd = 208
)

var Cmd_name = map[int32]string{
	0:   "eMsgToLSFromGC_Unknow",
	1:   "eMsgToLSFromGC_AskLogin",
	160: "eMsgToLSFromGC_SendMsg",
	161: "eMsgToLSFromGC_ReadMsg",
	208: "eMsgToGCFromLS_NetMsg",
}
var Cmd_value = map[string]int32{
	"eMsgToLSFromGC_Unknow":   0,
	"eMsgToLSFromGC_AskLogin": 1,
	"eMsgToLSFromGC_SendMsg":  160,
	"eMsgToLSFromGC_ReadMsg":  161,
	"eMsgToGCFromLS_NetMsg":   208,
}

func (x Cmd) String() string {
	return proto.EnumName(Cmd_name, int32(x))
}
func (Cmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AskLogin struct {
	Cmd   Cmd    `protobuf:"varint,1,opt,name=cmd,enum=GCToLS.Cmd" json:"cmd,omitempty"`
	Plat  string `protobuf:"bytes,2,opt,name=plat" json:"plat,omitempty"`
	Uid   string `protobuf:"bytes,3,opt,name=uid" json:"uid,omitempty"`
	Login string `protobuf:"bytes,4,opt,name=login" json:"login,omitempty"`
	Pwd   string `protobuf:"bytes,5,opt,name=pwd" json:"pwd,omitempty"`
}

func (m *AskLogin) Reset()                    { *m = AskLogin{} }
func (m *AskLogin) String() string            { return proto.CompactTextString(m) }
func (*AskLogin) ProtoMessage()               {}
func (*AskLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AskLogin) GetCmd() Cmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_eMsgToLSFromGC_Unknow
}

func (m *AskLogin) GetPlat() string {
	if m != nil {
		return m.Plat
	}
	return ""
}

func (m *AskLogin) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *AskLogin) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *AskLogin) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type SendMsg struct {
	Cmd  Cmd    `protobuf:"varint,1,opt,name=cmd,enum=GCToLS.Cmd" json:"cmd,omitempty"`
	Send string `protobuf:"bytes,2,opt,name=send" json:"send,omitempty"`
	Recv string `protobuf:"bytes,3,opt,name=recv" json:"recv,omitempty"`
	Plat string `protobuf:"bytes,4,opt,name=plat" json:"plat,omitempty"`
	Data string `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
}

func (m *SendMsg) Reset()                    { *m = SendMsg{} }
func (m *SendMsg) String() string            { return proto.CompactTextString(m) }
func (*SendMsg) ProtoMessage()               {}
func (*SendMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SendMsg) GetCmd() Cmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_eMsgToLSFromGC_Unknow
}

func (m *SendMsg) GetSend() string {
	if m != nil {
		return m.Send
	}
	return ""
}

func (m *SendMsg) GetRecv() string {
	if m != nil {
		return m.Recv
	}
	return ""
}

func (m *SendMsg) GetPlat() string {
	if m != nil {
		return m.Plat
	}
	return ""
}

func (m *SendMsg) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type NetMsg struct {
	Cmd  Cmd    `protobuf:"varint,1,opt,name=cmd,enum=GCToLS.Cmd" json:"cmd,omitempty"`
	Send string `protobuf:"bytes,2,opt,name=send" json:"send,omitempty"`
	Recv string `protobuf:"bytes,3,opt,name=recv" json:"recv,omitempty"`
	Plat string `protobuf:"bytes,4,opt,name=plat" json:"plat,omitempty"`
	Mid  string `protobuf:"bytes,5,opt,name=mid" json:"mid,omitempty"`
}

func (m *NetMsg) Reset()                    { *m = NetMsg{} }
func (m *NetMsg) String() string            { return proto.CompactTextString(m) }
func (*NetMsg) ProtoMessage()               {}
func (*NetMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NetMsg) GetCmd() Cmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_eMsgToLSFromGC_Unknow
}

func (m *NetMsg) GetSend() string {
	if m != nil {
		return m.Send
	}
	return ""
}

func (m *NetMsg) GetRecv() string {
	if m != nil {
		return m.Recv
	}
	return ""
}

func (m *NetMsg) GetPlat() string {
	if m != nil {
		return m.Plat
	}
	return ""
}

func (m *NetMsg) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

type ReadMsg struct {
	Cmd  Cmd    `protobuf:"varint,1,opt,name=cmd,enum=GCToLS.Cmd" json:"cmd,omitempty"`
	Send string `protobuf:"bytes,2,opt,name=send" json:"send,omitempty"`
	Recv string `protobuf:"bytes,3,opt,name=recv" json:"recv,omitempty"`
	Mid  string `protobuf:"bytes,4,opt,name=mid" json:"mid,omitempty"`
}

func (m *ReadMsg) Reset()                    { *m = ReadMsg{} }
func (m *ReadMsg) String() string            { return proto.CompactTextString(m) }
func (*ReadMsg) ProtoMessage()               {}
func (*ReadMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadMsg) GetCmd() Cmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_eMsgToLSFromGC_Unknow
}

func (m *ReadMsg) GetSend() string {
	if m != nil {
		return m.Send
	}
	return ""
}

func (m *ReadMsg) GetRecv() string {
	if m != nil {
		return m.Recv
	}
	return ""
}

func (m *ReadMsg) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

// 登录返回
type LoginResult struct {
	Cmd  Cmd    `protobuf:"varint,1,opt,name=cmd,enum=GCToLS.Cmd" json:"cmd,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Uid  string `protobuf:"bytes,3,opt,name=uid" json:"uid,omitempty"`
	Data string `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *LoginResult) Reset()                    { *m = LoginResult{} }
func (m *LoginResult) String() string            { return proto.CompactTextString(m) }
func (*LoginResult) ProtoMessage()               {}
func (*LoginResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LoginResult) GetCmd() Cmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_eMsgToLSFromGC_Unknow
}

func (m *LoginResult) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *LoginResult) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *LoginResult) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*AskLogin)(nil), "GCToLS.AskLogin")
	proto.RegisterType((*SendMsg)(nil), "GCToLS.SendMsg")
	proto.RegisterType((*NetMsg)(nil), "GCToLS.NetMsg")
	proto.RegisterType((*ReadMsg)(nil), "GCToLS.ReadMsg")
	proto.RegisterType((*LoginResult)(nil), "GCToLS.LoginResult")
	proto.RegisterEnum("GCToLS.Cmd", Cmd_name, Cmd_value)
}

func init() { proto.RegisterFile("GCTOLS.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xbb, 0x4e, 0xc3, 0x30,
	0x14, 0x86, 0x31, 0x49, 0x2f, 0x9c, 0x22, 0x64, 0x59, 0x5c, 0x02, 0x15, 0x52, 0x95, 0xa9, 0x62,
	0xc8, 0x00, 0x23, 0x13, 0x58, 0x22, 0x4b, 0x0a, 0x52, 0x52, 0x16, 0x96, 0x2a, 0xad, 0x4d, 0x15,
	0xb5, 0x8e, 0xa3, 0x3a, 0x25, 0xbc, 0x07, 0x2f, 0x00, 0x6f, 0xc4, 0x23, 0x21, 0x3b, 0x49, 0x8b,
	0xaa, 0x0e, 0x1d, 0x60, 0xfb, 0x7d, 0xfe, 0x23, 0x7f, 0xe7, 0x06, 0x87, 0x3e, 0x1d, 0x3e, 0x05,
	0x91, 0x97, 0x2d, 0x64, 0x2e, 0x49, 0xd3, 0xa7, 0x43, 0x19, 0x44, 0x6e, 0x01, 0xed, 0x3b, 0x35,
	0x0b, 0xe4, 0x34, 0x49, 0xc9, 0x25, 0x58, 0x13, 0xc1, 0x1c, 0xd4, 0x43, 0xfd, 0xa3, 0xeb, 0x8e,
	0x57, 0x66, 0x78, 0x54, 0xb0, 0x50, 0xc7, 0x09, 0x01, 0x3b, 0x9b, 0xc7, 0xb9, 0xb3, 0xdf, 0x43,
	0xfd, 0x83, 0xd0, 0x68, 0x82, 0xc1, 0x5a, 0x26, 0xcc, 0xb1, 0x4c, 0x48, 0x4b, 0x72, 0x0c, 0x8d,
	0xb9, 0xfe, 0xcd, 0xb1, 0x4d, 0xac, 0x7c, 0xe8, 0xbc, 0xac, 0x60, 0x4e, 0xa3, 0xcc, 0xcb, 0x0a,
	0xe6, 0xbe, 0x43, 0x2b, 0xe2, 0x29, 0x1b, 0xa8, 0xe9, 0x0e, 0x5c, 0xc5, 0x53, 0x56, 0x73, 0xb5,
	0xd6, 0xb1, 0x05, 0x9f, 0xbc, 0x55, 0x60, 0xa3, 0x57, 0xf5, 0xd9, 0xbf, 0xea, 0x23, 0x60, 0xb3,
	0x38, 0x8f, 0x2b, 0xb0, 0xd1, 0xee, 0x12, 0x9a, 0x8f, 0x3c, 0xff, 0x67, 0x30, 0x06, 0x4b, 0x24,
	0xab, 0x86, 0x45, 0xc2, 0xdc, 0x31, 0xb4, 0x42, 0x1e, 0xff, 0x65, 0xc3, 0x15, 0xc3, 0x5e, 0x33,
	0x5e, 0xa1, 0x63, 0x56, 0x19, 0x72, 0xb5, 0x9c, 0xe7, 0x3b, 0x70, 0x26, 0x92, 0xf1, 0x9a, 0xa3,
	0xf5, 0x96, 0x85, 0xd6, 0x23, 0xb4, 0xd7, 0x23, 0xbc, 0xfa, 0x40, 0x60, 0x51, 0xc1, 0xc8, 0x39,
	0x9c, 0xf0, 0x81, 0x9a, 0xea, 0x6f, 0x1f, 0x16, 0x52, 0xf8, 0x74, 0xf4, 0x9c, 0xce, 0x52, 0x59,
	0xe0, 0x3d, 0xd2, 0x85, 0xb3, 0x0d, 0xab, 0xbe, 0x33, 0x8c, 0x48, 0x17, 0x4e, 0x37, 0xcc, 0xea,
	0x16, 0xf0, 0xe7, 0x36, 0xb3, 0x9a, 0x1b, 0xfe, 0x42, 0xe4, 0xa2, 0x26, 0xfa, 0x54, 0x9b, 0x41,
	0x34, 0x2a, 0x77, 0x89, 0xbf, 0xd1, 0x3d, 0xbc, 0xb4, 0xbd, 0x5b, 0xd3, 0xa4, 0x1a, 0x37, 0xcd,
	0x99, 0xdf, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xdc, 0x4a, 0x9e, 0xf6, 0x02, 0x00, 0x00,
}
